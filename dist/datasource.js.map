{"version":3,"sources":["../src/datasource.js"],"names":["CicadaDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","headers","basicAuth","length","tags","doRequest","then","result","data","options","where","Date","range","from","getTime","to","DEFAULT","url_list","targets","filter","target","hide","isNaN","device_id","varbind_id","device_tag","varbind_tag","map","Promise","resolve","scope","self","all","results","forEach","i","res","no","columns","push","datapoints","rows","e","status","message","title","Object","keys","method","datasourceRequest"],"mappings":"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","file":"datasource.js","sourcesContent":["export class CicadaDatasource {\n\n\tconstructor(instanceSettings, $q, backendSrv, templateSrv) {\n\t\tthis.type = instanceSettings.type;\n\t\tthis.url = instanceSettings.url;\n\t\tthis.name = instanceSettings.name;\n\t\tthis.q = $q;\n\t\tthis.backendSrv = backendSrv;\n\t\tthis.templateSrv = templateSrv;\n\t\tthis.withCredentials = instanceSettings.withCredentials;\n\t\tthis.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'x-requested-with': 'XMLHttpRequest'\n\t\t};\n\t\tif (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) \n\t\t\tthis.headers['Authorization'] = instanceSettings.basicAuth;\n\t\t\n\t\t// cache tags\n\t\tthis.tags = {};\n\t\tthis.doRequest('/tags').then((result) => this.tags = result.data);\n\t}\n\n\tquery(options) {\n\t\tvar where = `&onlyrows=true&from=${new Date(options.range.from).getTime()}&to=${new Date(options.range.to).getTime()}&downsample=auto`\n\t\tvar DEFAULT = '* select *';\n\t\t\n\t\tvar url_list = options.targets\n\t\t\t.filter((target) => !target.hide)\n\t\t\t.filter((target) => target.type == 'single' && !isNaN(target.device_id) && !isNaN(target.varbind_id) || \n\t\t\t\ttarget.type == 'group' && target.device_tag != DEFAULT && target.varbind_tag != DEFAULT\n\t\t\t)\n\t\t\t.map((target) => (target.type == 'single') ?\n\t\t\t\t`/device/${target.device_id}/varbind-history?only=${target.varbind_id}` + where :\n\t\t\t\t`/tag/${target.varbind_tag}?tags=${target.device_tag || 'All'}` + where\n\t\t\t);\n\t\t\n\t\tif (url_list.length == 0)\t\n\t\t\treturn Promise.resolve({data: []});\n\t\t\n\t\tvar scope = url_list.map((url) => this.doRequest(url));\n\t\tvar self = this;\n\t\n\t\treturn Promise.all(scope).then(function (results) {\n\t\t\tvar data =  [];\n\t\t\t\n\t\t\tresults.forEach(function (result, i) {\n\t\t\t\tvar res = result.data;\n\t\t\t\n\t\t\t\tfor (var no = 1; no < res.columns.length; no++) {\n\t\t\t\t\tdata.push({\n\t\t\t\t\t\ttarget: res.columns[no],\n\t\t\t\t\t\tdatapoints: res.rows.map((e) => [e[no], e[0]]).filter((e) => !isNaN(e[0]) && e[0] != null)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\treturn Promise.resolve({data});\n\t\t})\n\t\n\t}\n\n\ttestDatasource() {\n\t\treturn this.doRequest('/favicon.ico')\n\t\t\t.then(res => res.status == 200 ? {status: 'success', message: 'OK', title: 'Success'} : {status: 'error', message: 'Fail', title: 'Error'});\n\t}\n\n\tgetDeviceTags () {\n\t\treturn Promise.resolve(Object.keys(this.tags));;\n\t}\t\n\n\tgetVarbindTags (device_tag) {\n\t\treturn Promise.resolve(this.tags[device_tag] || []);\n\t}\n\n\tgetDeviceList () {\n\t\treturn this.doRequest('/device').then((res) => res.data);\n\t}\n\n\tgetVarbindList (device_id) {\n\t\treturn this.doRequest(`/device/${device_id}/varbind-list`).then((res) => res.data);\n\t}\n\t\t\n\tdoRequest(url) {\n\t\tvar options = {\n\t\t\turl: this.url + url,\n\t\t\twithCredentials: this.withCredentials,\n\t\t\theaders: this.headers,\n\t\t\tmethod: 'GET'\n\t\t}\n\t\t\n\t\treturn this.backendSrv.datasourceRequest(options);\n\t}\n}\n"]}